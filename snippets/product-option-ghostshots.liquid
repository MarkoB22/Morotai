{%- liquid
if sticky
assign appended = '--sticky'
endif
-%}

<style>
	.variations .product-form__input--block input[type=radio]+label {
		padding: 6.605px 12.5px 4.394px 12px !important;
	}


	.variations .product-form__input--block input[type=radio]:checked+.test .test2 label {
		z-index: 5;
		box-shadow: 0 0 0 1px var(--color-body) inset;
	}

	.variations .product-form__input--block input[type=radio]+.test .test2 label {
		z-index: 5;
		box-shadow: 0 0 0 1px var(--color-border) inset;
	}
</style>

{%- case option_type -%}

{%- when 'color' -%}
{%- liquid
assign custom_colors = settings.color_swatches | newline_to_br | split: '<br />'
assign key_array = ''
assign val_array = ''

for color in custom_colors
assign key = color | split: ':' | first | rstrip
assign value = color | split: ':' | last | lstrip
assign key_array = key_array | append: ',' | append: key
assign val_array = val_array | append: ',' | append: value
endfor

assign key_array = key_array | remove_first: ',' | strip_newlines | downcase | split: ','
assign val_array = val_array | remove_first: ',' | split: ','
-%}

<fieldset class="product-form__input product-form__input--color">
	<p>Color</p>
	<div class="form__label">
		{{ option.name }}: <span class="form__label__value">{{ option.selected_value }}</span>
	</div>
	{%- for value in option.values -%}
	<input type="radio" id="{{ section.id }}-{{ option.position }}-{{ forloop.index0 }}{{ appended }}"
		name="{{ option.name | append: appended }}" value="{{ value | escape }}" form="{{ product_form_id }}" {% if
		option.selected_value==value %} checked {% endif %}>
	{%- liquid
	assign color_value = value | downcase | escape

	for custom_color in key_array
	if custom_color == color_value
	assign color_value = val_array[forloop.index0]
	endif
	endfor

	if color_value contains '.'
	assign bg_value = color_value | file_url
	assign color_value = 'var(--bg-body)'
	endif
	-%}
	<label for="{{ section.id }}-{{ option.position }}-{{ forloop.index0 }}{{ appended }}"
		style="--option-color: {{ color_value | downcase | escape }}; {%- if bg_value -%} --option-color-image: url('{{ bg_value | escape }}');{%- endif -%}">
		{{ value }}
	</label>
	{%- endfor -%}
</fieldset>

{%- when 'dropdown' -%}
<fieldset class="product-form__input product-form__input--dropdown">
	<div class="form__label" for="Option-{{ section.id }}-{{ forloop.index0 }}{{ appended }}">
		{{ option.name -}}
		{{- sizing_link }}
	</div>
	<div class="select">
		<select id="Option-{{ section.id }}-{{ forloop.index0 }}{{ appended }}"
			name="options[{{ option.name | escape | append: appended }}]" form="{{ product_form_id }}">
			{%- for value in option.values -%}
			<option value="{{ value | escape }}" {% if option.selected_value==value %} selected="selected" {% endif %}>
				{{ value }}
			</option>
			{%- endfor -%}
		</select>
		<div class="select-arrow">{%- render 'svg-icons' with 'thb-select' -%}</div>
	</div>
</fieldset>



{%- when 'button' -%}
  {{ option.name }}
{% if option.name == 'Größe' or option.name == 'size' %} 
{% for variant in product.variants %}
	{% assign variant_title_parts = variant.title | split: ' ' %}
	{% assign size = variant_title_parts.first %}
	{% assign color = variant_title_parts.last %}
		{% if variant.inventory_quantity < 4 and variant.inventory_quantity > 0 %}
			<div class="low_quantity hidden_low_quantity" color="{{ color }}" size="{{ size }}">{{ "products.product.only" | t }} {{ variant.inventory_quantity }} {{ "products.product.left_in_stock" | t }}</div>
		{% endif %}
		{% if variant.inventory_quantity == 0 %}
			<div class="low_quantity hidden_low_quantity" color="{{ color }}" size="{{ size }}">{{ "products.product.out_of_stock" | t }}</div>
		{% endif %}
	{% endfor %}
{% endif %}
<fieldset class="product-form__input product-form__input--block">
	<div class="form__label">
		{%- liquid
		assign optionClassTrans = 'general.' | append: option.name | downcase | t
		assign finalSize = option.selected_value
		-%}
		{{ option.name }}:
		<span class="form__label__value {{ optionClassTrans }}__value">{{ option.selected_value }}</span>
		{{- sizing_link }}
	</div>

	<div style="gap: 16px; display: flex; flex-direction: row">
		{% assign reversed_values = option.values | reverse %}
		{% for value in reversed_values %}
		<input type="radio" id="{{ section.id }}-{{ option.position }}-{{ forloop.index0 }}{{ appended }}"
			name="{{ option.name | append: appended }}" value="{{ value | escape }}" form="{{ product_form_id }}"
			style="gap: 16px" {% if option.selected_value == value %} checked {% endif %}>

		<div class="test" style="display: flex; flex-direction: column; align-items: center; gap: 4px;">
			<div class="test2"
				style="display: flex; justify-content: center; align-items: center; align-self: stretch;">
				<label for="{{ section.id }}-{{ option.position }}-{{ forloop.index0 }}{{ appended }}"
					style="{% if option.name == 'Farbe' %} width: 92px; height: 105px;{% else %} padding: 6.605px 12px 4.395px 12.5px;{% endif %}">
					{% if option.name == 'Farbe' %}
					{%- for variant in product.variants -%}
					{% if variant.title contains value %}
					{% assign imagePath = variant.image | image_url %}
					{% break %}
					{% endif %}
					{%- endfor -%}
					<div style="height: 105px; align-self: center; align-content: center; justify-content: center; align-items: center; padding: 6.605px 12.5px 4.394px 12px; cursor: pointer; display: flex;">
						<img width="92px" height="105px" src="{{ imagePath }}" alt="{{ value }}" class="color-thumbnail">
					</div>
					{% else %}
					<span style="font-family: Rajdhani; font-size: 16px; font-style: normal; line-height: 120%;">{{ value }}</span>
					{% endif %}
				</label>
		</div>
	</div>
	{% endfor %}
	</div>
</fieldset>
{%- endcase -%}

<script>
document.addEventListener('DOMContentLoaded', function() {
  function handleInputChange() {
    const colorInputs = document.querySelectorAll('input[name="Farbe"], input[name="Color"]');
    const sizeInputs = document.querySelectorAll('input[name="Größe"], input[name="Size"]');

    const selectedColor = [...colorInputs].find(input => input.checked)?.getAttribute('value') || '';
    const selectedSize = [...sizeInputs].find(input => input.checked)?.getAttribute('value') || '';

    const quantity_warnings = document.querySelectorAll('.low_quantity');
    if (quantity_warnings.length > 0) {
      quantity_warnings.forEach(function (quantity_warning) {
        quantity_warning.classList.add('hidden_low_quantity');
      });

      const matchingElement = document.querySelector(`.low_quantity[color="${selectedColor}"][size="${selectedSize}"]`);

      if (matchingElement) {
        matchingElement.classList.remove('hidden_low_quantity');
      }
    }
  }

  const colorInputs = document.querySelectorAll('input[name="Farbe"], input[name="Color"]');
  const sizeInputs = document.querySelectorAll('input[name="Größe"], input[name="Size"]');

  colorInputs.forEach(input => {
    input.addEventListener('change', handleInputChange);
  });

  sizeInputs.forEach(input => {
    input.addEventListener('change', handleInputChange);
  });

  handleInputChange();
});
</script>