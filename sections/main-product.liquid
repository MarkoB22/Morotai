{{- 'product.css' | asset_url | stylesheet_tag -}}

{%- liquid
  assign first_3d_model = product.media | where: 'media_type', 'model' | first
  assign full_width = section.settings.full_width
  assign media_layout = section.settings.media_layout
  assign media_aspect_ratio = section.settings.media_aspect_ratio
  assign enable_sticky_info = section.settings.enable_sticky_info
  assign enable_sticky_add_to_cart = section.settings.enable_sticky_add_to_cart
  assign picker_type = 'dropdown'
  assign color_picker = true
  assign image_index = -1
  assign display_captions = section.settings.display_captions
  assign hide_variants = section.settings.hide_variants
  assign featured_media = product.selected_or_first_available_variant.featured_media
  assign first_image = null
  assign variant_images = product.images | where: 'attached_to_variant?', true | map: 'src'
  assign is_disabled = false
   assign firstMedia = ''

  assign ratio = 1
  assign sizes = '375x375,640x640,960x960'
  if media_aspect_ratio == 'adapt'
    assign sizes = '375x0,640x0,960x0'
  elsif media_aspect_ratio == 'portrait'
    assign ratio = 1 | divided_by: 1.25
    assign sizes = '375x469,640x800,960x1200'
  elsif media_aspect_ratio == 'landscape'
    assign ratio = 1 | divided_by: 0.75
    assign sizes = '375x281,640x480,960x720'
  endif

  if section.settings.hide_variants and variant_images.size == product.media.size
    assign single_media_visible = true
  endif

  assign media_count = product.media.size
  if hide_variants and media_count > 1 and variant_images.size > 0
    assign media_count = media_count | minus: variant_images.size | plus: 1
  endif

  if media_count == 1 or single_media_visible
    assign single_media_visible_mobile = true
  endif
-%}
{%- if first_3d_model -%}
  <link
    id="ModelViewerStyle"
    rel="stylesheet"
    href="https://cdn.shopify.com/shopifycloud/model-viewer-ui/assets/v1.0/model-viewer-ui.css"
    media="print"
    onload="this.media='all'"
  >
  <link
    id="ModelViewerOverride"
    rel="stylesheet"
    href="{{ 'product-model-viewer-ui.css' | asset_url }}"
    media="print"
    onload="this.media='all'"
  >
{%- endif -%}

<style>
       .temperature-bar {
      margin-top: 8px;
      height: 12px;
      width: 100%;
      flex-shrink: 0;
      display: grid;
      grid-template-columns: repeat(9, 1fr); 
    }

    .temperature-bar > div {
      height: 100%;
      border-right: 1px solid #fff; 
    }

    .mild {
      background: #000;
    }

    .chilly {
      background: #fff;
    }

 

       @media only screen and (min-width: 1181px) {

       #Product-Slider {
          grid-gap: 16px;
          scroll-behavior: smooth;
          grid-template-columns: 130px 522px;
          grid-column: 2;
          justify-self: end;
          display: grid;
          justify-content: end;
       }

         .degrees {
           margin-top: 14px;
         }


        #Product-Slider.product-images:first-child {
            grid-column: 2;
          }

       .product-slider-wrapper {
         overflow-x: auto;
         max-height: 750px;
         height: 695.5px !important;
       }

         .product-slider-wrapper::-webkit-scrollbar {
  display: none;
}

        @media only screen and (min-width: 1068px) {
      .product-grid-container {
          grid-template-columns: 1fr 0.8fr !important;
      }
        }

        .product-information {
          max-width: 500px;
        }

        .product-images {
          gap: 16px !important;
        }
        }


        @media only screen and (max-width: 1180px) {
      .zoom-container {
          display: none !important;
      }
          .product-slider-wrapper {
            display: none !important;
          }
        }

          @media only screen and (min-width: 1181px) {
      .second {
          display: none !important;
      }
        }
        .product-slider-wrapper {
          display: grid;
          gap: 16px;
        }

      lazyautosizes.ls-is-cached.lazyloaded {
        max-height: 750px !important;
        max-width: 500px !important;
    }

      .badges-list {
        list-style: none;
        padding: 0;
        margin: 0;
        white-space: nowrap;
        overflow: hidden;
      }

      .badges-list img {
        max-width: 100%;
        height: auto;
        display: inline-block;
        margin: 5px;
      }

          .badges-list img {
          margin: 2px;
        }

    .overlay {
    position: fixed;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    z-index: 1000;
    background: rgba(0, 0, 0, 0.7);
    transition: opacity 500ms;
    visibility: hidden;
    opacity: 0;
  }
  .overlay:target {
    visibility: visible;
    opacity: 1;
  }

  .popup {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    margin: auto;
    padding: 20px;
    background: #fff;
    border-radius: 5px;
    width: 30%;
    transition: all 5s ease-in-out;
    z-index: 1000;
  }

  .popup h2 {
    margin-top: 0;
    color: #333;
    font-family: Tahoma, Arial, sans-serif;
  }
  .popup .close {
    position: absolute;
    top: 20px;
    right: 30px;
    transition: all 200ms;
    font-size: 30px;
    font-weight: bold;
    text-decoration: none;
    color: black;
  }
  .popup .close:hover {
    color: #06D85F;
  }
  .popup .content {
    max-height: 30%;
    overflow: auto;
  }



  @media only screen and (min-width: 1068px) {
.image-wrapper:hover a.product-single__media-zoom {
    opacity: 1 !important;
}
  }

  

  @media screen and (max-width: 700px){
    .box{
      width: 70%;
    }
    .popup{
      width: 70%;
    }
  }

  .shopify-payment-button {
    display: none;
  }

  .outer-paragraph {
      display: inline;
      margin: 0;
    }

  .inner-paragraph {
      display: inline;
      margin: 0;
      margin-right: 10px;
    }

  .multiple-slider::-webkit-scrollbar {
  display: none;
}

  .multiple-slider {
    display: none !important;
  }

</style>
<script>
    function switchToC() {
        var celsius = document.getElementById("celsius");
              var feren = document.getElementById("feren");

if (celsius.style.display === "none") {
celsius.style.display = "flex";
  feren.style.display = "none";
}
else {celsius.style.display = "flex";
     feren.style.display = "none";}
    }

    function switchToF() {
        var celsius = document.getElementById("celsius");
              var feren = document.getElementById("feren");

if (feren.style.display === "none") {
feren.style.display = "flex";
  celsius.style.display = "none";
}
else {feren.style.display = "flex";
     celsius.style.display = "none";}
    }
</script>

<div class="thb-product-detail product">
  <div class="row {% if full_width %}full-width-row{% endif %}">
    <div class="small-12 columns">
      <div class="product-grid-container">
        <div id="MediaGallery-{{ section.id }}">
          <div class="product-image-container">

          {% assign uniqueAlts = '' %}

          {% comment %}
            Iterate through product.media to collect unique alt values
          {% endcomment %}
          {% for media in product.media %}
            {% if media.alt != nil and media.alt != blank %}
              {% unless uniqueAlts contains media.alt %}
                {% assign uniqueAlts = uniqueAlts | append: media.alt | append: ',' %}
              {% endunless %}
            {% endif %}
          {% endfor %}
          
          {% comment %}
            Convert the string of unique alt values to an array by splitting it at commas
          {% endcomment %}
          {% assign uniqueAlts = uniqueAlts | split: ',' %}
          
          <!-- Main carousel -->
          <div class="main_mobile-carousel not_desktop">
            {% for alt in uniqueAlts %}
              {% assign altImages = product.media | where: "alt", alt %}
              {% assign altImagesCount = altImages.size %}
              {% assign firstImage = altImages | first %}
              {% assign remainingImages = altImages | slice: 1, altImagesCount %}
              
              {% for media in remainingImages %}
                {%- case media.media_type -%}
                  {% when 'image' %}
                    {%- liquid
                      if media_aspect_ratio == 'adapt'
                        assign ratio = media.preview_image.aspect_ratio
                      endif
                    -%}
                    <div class="carousel__slide product-single__media product-single__media-image"
                      style="--padding-bottom: {{ 1 | divided_by: ratio | times: 100 }}%;">
                      {%- render 'responsive-image', image: media.preview_image, sizes: sizes -%}
                      {%- if media.preview_image.alt != blank and display_captions -%}
                        <span class="figcaption">{{ media.preview_image.alt }}</span>
                      {%- endif -%}
                    </div>
                {% endcase %}
              {% endfor %}
              
              {%- liquid
                if media_aspect_ratio == 'adapt'
                  assign ratio = firstImage.preview_image.aspect_ratio
                endif
              -%}
              <div class="carousel__slide product-single__media product-single__media-image"
                style="--padding-bottom: {{ 1 | divided_by: ratio | times: 100 }}%;">
                {%- render 'responsive-image', image: firstImage.preview_image, sizes: sizes -%}
                {%- if firstImage.preview_image.alt != blank and display_captions -%}
                  <span class="figcaption">{{ firstImage.preview_image.alt }}</span>
                {%- endif -%}
              </div>
            {% endfor %}
          </div>
          
          <!-- Thumbnail carousel -->
          <div class="thumbnail-carousel not_desktop">
            {% for alt in uniqueAlts %}
              {% assign altImages = product.media | where: "alt", alt %}
              {% assign altImagesCount = altImages.size %}
              {% assign firstImage = altImages | first %}
              {% assign remainingImages = altImages | slice: 1, altImagesCount %}
              
              {% for media in remainingImages %}
                {%- case media.media_type -%}
                  {% when 'image' %}
                    {%- liquid
                      if media_aspect_ratio == 'adapt'
                        assign ratio = media.preview_image.aspect_ratio
                      endif
                    -%}
                    <div class="carousel__slide product-single__media product-single__media-image carousel_thumbnail"
                      style="--padding-bottom: {{ 1 | divided_by: ratio | times: 100 | divided_by: 5.9115 }}%;">
                      {%- render 'responsive-image', image: media.preview_image, sizes: sizes -%}
                      {%- if media.preview_image.alt != blank and display_captions -%}
                        <span class="figcaption">{{ media.preview_image.alt }}</span>
                      {%- endif -%}
                    </div>
                {% endcase %}
              {% endfor %}
              
              {%- liquid
                if media_aspect_ratio == 'adapt'
                  assign ratio = firstImage.preview_image.aspect_ratio
                endif
              -%}
              <div class="carousel__slide product-single__media product-single__media-image carousel_thumbnail"
                style="--padding-bottom: {{ 1 | divided_by: ratio | times: 100 | divided_by: 5.9115 }}%;">
                {%- render 'responsive-image', image: firstImage.preview_image, sizes: sizes -%}
                {%- if firstImage.preview_image.alt != blank and display_captions -%}
                  <span class="figcaption">{{ firstImage.preview_image.alt }}</span>
                {%- endif -%}
              </div>
            {% endfor %}
          </div>
 
                    

          <!-- Button row -->
          <div class="button-row not_desktop">
            <button class="button--previous">{% render 'svg-icons' with 'carousel-arrow-right' %}</button>
            <button class="button--next">{% render 'svg-icons' with 'carousel-arrow-right' %}</button>
          </div>

            <product-slider
              id="Product-Slider"
              class="product-images product-images--{{ media_layout }} not_mobile"
              data-captions="{{ display_captions }}"
            >
              {%- if featured_media != null -%}
                {%- liquid
                  assign image_index = image_index | plus: 1
                  assign first_image = featured_media.preview_image

                  if media_aspect_ratio == 'adapt'
                    assign ratio = featured_media.preview_image.aspect_ratio
                  endif
                -%}
                <div
                  id="Slide-{{ section.id }}-{{ featured_media.id }}"
                  class="multiple-slider product-images__slide is-active {% if hide_variants and variant_images contains featured_media.src %} product-images__slide-item--variant{% endif %}"
                  data-media-id="{{ section.id }}-{{ featured_media.id }}"
                  style="position: relative; display: none !important";
                >
               

                  <div
                    class="product-single__media product-single__media-image aspect-ratio aspect-ratio--{{ media_aspect_ratio }} "
                    id="Media-Thumbnails-{{ section.id }}-{{ featured_media.id }}"
                    style="--padding-bottom: {{ 1 | divided_by: ratio | times: 100 }}%;"
                  >
                    {%- if section.settings.lightbox != blank -%}
                      <a
                        href="{{ featured_media.src | image_url }}"
                        class="product-single__media-zoom"
                        data-msrc="{{- featured_media.src | image_url: width: 20 -}}"
                        data-h="{{ featured_media.height }}"
                        data-w="{{ featured_media.width }}"
                        target="_blank"
                        tabindex="-1"
                        {%- if featured_media.preview_image.alt != blank and display_captions -%}
                          title="{{ featured_media.preview_image.alt | escape }}"
                        {%- endif -%}
                        data-index="{{ image_index }}"
                      >
                        {%- render 'svg-icons' with 'zoom' -%}
                      </a>
                    {%- endif -%}
                    {%- render 'responsive-image', image: featured_media.preview_image, sizes: sizes -%}
                    {%- if featured_media.preview_image.alt != blank and display_captions -%}
                      <span class="figcaption">{{ featured_media.preview_image.alt }}</span>
                    {%- endif -%}
                  </div>
                </div>
              {%- endif -%}

              <div class="product-slider-wrapper">
                
                {% assign color_to_filter = 'DUNKELGRAU' %}
                
                 {% assign filtered_media = product.media | where: 'tags', color_to_filter %}

                
                 
                  {% assign first_filtered_product = filtered_products | first %}

                  

                {% for media_item in filtered_media %}
<span>{{ media_item }}</span>
                
{% endfor %}
                
                
                {%- for media in product.media -%}



                    {%- liquid
                      if media.media_type == 'image'
                        assign image_index = image_index | default: 0 | plus: 1
                      endif
                      if image_index == 0
                        assign first_image = media.preview_image
                      endif
                    -%}


                    
                    <div class="product_image_slider">
                      {%- case media.media_type -%}
                        {% when 'image' %}
                          {%- liquid
                            if media_aspect_ratio == 'adapt'
                              assign ratio = media.preview_image.aspect_ratio
                            endif
                          -%}
                          <div
                            class="product-single__media product-single__media-image aspect-ratio aspect-ratio--{{ media_aspect_ratio }}"
                            id="Media-Thumbnails-{{ section.id }}-{{ media.id }}"
                            style="--padding-bottom: {{ 1 | divided_by: ratio | times: 100 }}%;"
                          >
                                                            
                            {%- render 'responsive-image', image: media.preview_image, sizes: sizes -%}
                            {%- if media.preview_image.alt != blank and display_captions -%}
                              <span class="figcaption">{{ media.preview_image.alt }}</span>
                            {%- endif -%}
                          </div>
                        {% when 'external_video' %}
                          <div
                            class="product-single__media product-single__media-external-video"
                            data-provider="{{ media.host }}"
                            data-media-id="{{ media.id }}"
                            id="Media-Thumbnails-{{ section.id }}-{{ media.id }}"
                            style="--aspect-ratio: {{ media.aspect_ratio }}"
                          >
                            {{
                              media
                              | external_video_tag:
                                loading: 'lazy',
                                loop: section.settings.enable_video_looping,
                                muted: '1'
                            }}
                          </div>
                        {% when 'video' %}
                          <div
                            class="product-single__media product-single__media-native-video"
                            data-media-id="{{ media.id }}"
                            style="--aspect-ratio: {{ media.aspect_ratio }}"
                            id="Media-Thumbnails-{{ section.id }}-{{ media.id }}"
                          >
                            {{
                              media
                              | video_tag: controls: true, loading: 'lazy', loop: section.settings.enable_video_looping
                            }}
                          </div>
                        {% when 'model' %}
                          <product-model
                            class="product-single__media product-single__media-model"
                            style="padding-top: 100%"
                            data-media-id="{{ media.id }}"
                            id="Media-Thumbnails-{{ section.id }}-{{ media.id }}"
                          >
                            <button
                              id="Deferred-Poster-Modal-{{ media.id }}"
                              class="product-single__media-model-button"
                              type="button"
                            >
                              {%- render 'svg-icons' with 'thb-icon-3d-model' -%}
                            </button>
                            {%- render 'responsive-image', image: media.preview_image, sizes: sizes -%}
                            <template>
                              {{ media | media_tag: image_size: '2048x', toggleable: true }}
                            </template>
                          </product-model>
                          <button
                            class="button product__xr-button"
                            type="button"
                            data-shopify-xr
                            aria-label="{{ 'products.product.xr_button_label' | t }}"
                            data-shopify-model3d-id="{{ media.id }}"
                            data-shopify-xr-hidden
                            data-shopify-title="{{ product.title | escape }}"
                          >
                            <span>
                              {% render 'svg-icons' with 'thb-icon-3d-model' %}
                              {{ 'products.product.xr_button' | t }}
                            </span>
                          </button>
                      {% endcase %}
                    </div>
                {%- endfor -%}
              </div>
              <!-- <div class="zoom-container" onmousemove="zoomImage(event)" onmouseleave="resetImage()"> -->

              
               {%- liquid
                      if media.media_type == 'image'
                        assign image_index = image_index | default: 0 | plus: 1
                      endif
                      if image_index == 0
                        assign first_image = media.preview_image
                      endif
                    -%}


              
              

              
              <div class="zoom-container"  id="container">
                <div class="image-wrapper" style="position: relative;">
                     <a
                                href="{{ first_image.src | image_url }}"
                                class="product-single__media-zoom"
                                data-msrc="{{- first_image.src | image_url: width: 20 -}}"
                                data-h="{{ first_image.height }}"
                                data-w="{{ first_image.width }}"
                                target="_blank"
                                tabindex="-1"
                                data-index="{{ image_index }}"
                              >
                                {%- render 'svg-icons' with 'zoom' -%}
                              </a>

                  {%- assign first_media = product.media | first -%}

{%- if first_media -%}
    <a
                        href="{{ featured_media.src | image_url }}"
                        class="product-single__media-zoom"
                        data-msrc="{{- featured_media.src | image_url: width: 20 -}}"
                        data-h="{{ featured_media.height }}"
                        data-w="{{ featured_media.width }}"
                        target="_blank"
                        tabindex="-1"
                        {%- if featured_media.preview_image.alt != blank and display_captions -%}
                          title="{{ featured_media.preview_image.alt | escape }}"
                        {%- endif -%}
                        data-index="{{ image_index }}"
                      >
                        {%- render 'svg-icons' with 'zoom' -%}
                      </a>
  {%- render 'responsive-image-main-product', image: first_media, sizes: sizes -%}
  <div id="zoom" style="background-image: url({{ first_media | image_url: width: 1024 }});"></div>
{%- endif -%}
     </div>  
  
              </div>
              {%- for media in product.media -%}
                  {%- liquid
                    if media.media_type == 'image'
                      assign image_index = image_index | default: 0 | plus: 1
                    endif
                    if image_index == 0
                      assign first_image = media.preview_image
                    endif
                  -%}
                  <div
                    id="Slide-{{ section.id }}-{{ media.id }}"
                    class="second product-images__slide{% if product.selected_or_first_available_variant.featured_media == null and forloop.index == 1 %} is-active{% endif %}{% if hide_variants and variant_images contains media.src %} product-images__slide-item--variant{% endif %}{% if media.media_type != 'image' %} product-images__slide--full{% endif %}"
                    data-media-id="{{ section.id }}-{{ media.id }}"
                  >
                    {%- case media.media_type -%}
                      {% when 'image' %}
                        {%- liquid
                          if media_aspect_ratio == 'adapt'
                            assign ratio = media.preview_image.aspect_ratio
                          endif
                        -%}
                        <div
                          class="product-single__media product-single__media-image aspect-ratio aspect-ratio--{{ media_aspect_ratio }}"
                          id="Media-Thumbnails-{{ section.id }}-{{ media.id }}"
                          style="--padding-bottom: {{ 1 | divided_by: ratio | times: 100 }}%;"
                        >
                          {%- if section.settings.lightbox != blank -%}
                            <a
                              href="{{ media.src | image_url }}"
                              class="product-single__media-zoom"
                              data-msrc="{{- media.src | image_url: width: 20 -}}"
                              data-h="{{ media.height }}"
                              data-w="{{ media.width }}"
                              target="_blank"
                              tabindex="-1"
                              {%- if media.preview_image.alt != blank and display_captions -%}
                                title="{{ media.preview_image.alt | escape }}"
                              {%- endif -%}
                              data-index="{{ image_index }}"
                            >
                              {%- render 'svg-icons' with 'zoom' -%}
                            </a>
                          {%- endif -%}
                          {%- render 'responsive-image', image: media.preview_image, sizes: sizes -%}
                          {%- if media.preview_image.alt != blank and display_captions -%}
                            <span class="figcaption">{{ media.preview_image.alt }}</span>
                          {%- endif -%}
                        </div>
                      {% when 'external_video' %}
                        <div
                          class="product-single__media product-single__media-external-video"
                          data-provider="{{ media.host }}"
                          data-media-id="{{ media.id }}"
                          id="Media-Thumbnails-{{ section.id }}-{{ media.id }}"
                          style="--aspect-ratio: {{ media.aspect_ratio }}"
                        >
                          {{
                            media
                            | external_video_tag:
                              loading: 'lazy',
                              loop: section.settings.enable_video_looping,
                              muted: '1'
                          }}
                        </div>
                      {% when 'video' %}
                        <div
                          class="product-single__media product-single__media-native-video"
                          data-media-id="{{ media.id }}"
                          style="--aspect-ratio: {{ media.aspect_ratio }}"
                          id="Media-Thumbnails-{{ section.id }}-{{ media.id }}"
                        >
                          {{
                            media
                            | video_tag: controls: true, loading: 'lazy', loop: section.settings.enable_video_looping
                          }}
                        </div>
                      {% when 'model' %}
                        <product-model
                          class="product-single__media product-single__media-model"
                          style="padding-top: 100%"
                          data-media-id="{{ media.id }}"
                          id="Media-Thumbnails-{{ section.id }}-{{ media.id }}"
                        >
                          <button
                            id="Deferred-Poster-Modal-{{ media.id }}"
                            class="product-single__media-model-button"
                            type="button"
                          >
                            {%- render 'svg-icons' with 'thb-icon-3d-model' -%}
                          </button>
                          {%- render 'responsive-image', image: media.preview_image, sizes: sizes -%}
                          <template>
                            {{ media | media_tag: image_size: '2048x', toggleable: true }}
                          </template>
                        </product-model>
                        <button
                          class="button product__xr-button"
                          type="button"
                          data-shopify-xr
                          aria-label="{{ 'products.product.xr_button_label' | t }}"
                          data-shopify-model3d-id="{{ media.id }}"
                          data-shopify-xr-hidden
                          data-shopify-title="{{ product.title | escape }}"
                        >
                          <span>
                            {% render 'svg-icons' with 'thb-icon-3d-model' %}
                            {{ 'products.product.xr_button' | t }}
                          </span>
                        </button>
                    {% endcase %}
                  </div>
              {%- endfor -%}
            </product-slider>
          </div>
        </div>
        <div class="product-information">
          <div
            id="ProductInfo-{{ section.id }}"
            class="product-information--inner{% if enable_sticky_info %} production-information--sticky{% endif %}"
          >
            {%- assign product_form_id = 'product-form-' | append: section.id -%}
            {% for block in section.blocks %}
              {%- case block.type -%}
                {%- when 'text' -%}
                  <p class="product--text {{ block.settings.text_style }}" {{ block.shopify_attributes }}>
                    {{- block.settings.text -}}
                  </p>
                {%- when 'custom_liquid' -%}
                  {{ block.settings.custom_liquid }}
                {%- when 'title' -%}
                  <div class="product-title-container" {{ block.shopify_attributes }}>
                    <h1 class="product-title uppercase--{{ block.settings.uppercase }}" 
                        style="color: var(--Black, #000);
                        font-family: Rajdhani, sans-serif;
                        font-size: 22.5px;           
                        font-style: normal;
                        font-weight: 400;
                        line-height: normal;
                        text-transform: uppercase;">{{ product.title }}</h1>
                    {% for tag in product.tags %}
                      {% if tag == 'NEW' %}
                        {% assign badge_position = settings.badge_position %}
                        <div class="badge badge_new-main_product {{ badge_position }}">
                          {{ 'products.product.new' | t }}
                        </div>
                      {% endif %}
                    {% endfor %}
                    <div class="product-price-container">
                      <div class="no-js-hidden" id="price-{{ section.id }}">
                        {% render 'product-price', product: product, use_variant: true, show_badges: true %}
                      </div>
                    </div>
                  </div>               

            <div class="ruk_rating_snippet" data-sku="{{ product.handle }};{{ product.variants | map: 'sku' | join: ';' }};{{ product.variants | map: 'id' | join: ';' }}"></div>
                      
                      <div class="attribute-container" style="margin-top: 20px">
                        <div class="attribute-tooltixp">
                          {% assign product_description_lines = product.description | newline_to_br | split: '<br />' %}
                          {% assign highlights_section_found = false %}
                          <ul class="badges-list" style="margin-left: 0px">
                            {% render 'product-badges' with product.metafields.attributes.BULLET_POINT_1 %}
                            {% render 'product-badges' with product.metafields.custom.bulletpoint_2 %}
                            {% render 'product-badges' with product.metafields.custom.bulletpoint_3 %}
                            {% render 'product-badges' with product.metafields.custom.bulletpoint_4 %}
                            {% render 'product-badges' with product.metafields.custom.bulletpoint_5 %}
                            {% render 'product-badges' with product.metafields.custom.bulletpoint_6 %}
                            {% render 'product-badges' with product.metafields.custom.bulletpoint_7 %}
                            {% render 'product-badges' with product.metafields.custom.bulletpoint_8 %}
                            {% render 'product-badges' with product.metafields.custom.bulletpoint_9 %}
                            {% render 'product-badges' with product.metafields.custom.bulletpoint_10 %}   
                          </ul>
                          <span class="attribute-tooltiptext mb-0"> </span>
                        </div>
                      </div>
                
                    {%- if block.settings.show_products_rating and product.metafields.reviews.rating.value != blank -%}
                      <a class="star-rating-container" href="#shopify-product-reviews">
                        <div
                          class="star-rating"
                          style="--star-rating: {{ product.metafields.reviews.rating.value.rating }};"
                        ></div>
                        <span>
                          {{- 'products.product.reviews' | t: count: product.metafields.reviews.rating_count -}}
                        </span>
                      </a>
                    {%- endif -%}

                {%- when 'description' -%}
                  <span
                    style="
                      color: var(--Black, #000);
                      font-family: Rajdhani;
                      font-size: 24px;
                      font-style: normal;
                      font-weight: 500;
                      line-height: normal;
                    "
                  >
                    {{ 'sections.faq.products.description' | t }}
                  </span>
                {%- when 'sku' -%}
                  <div
                    style="
                      margin-top: 12px;
                      margin-bottom: 12px;
                    "
                    class="product-sku product--text {{ block.settings.sku_style }}"
                    id="sku-{{ section.id }}"
                  >
                    {{ product.selected_or_first_available_variant.sku }}
                  </div>
                  <div class="product-short-description rte" style="margin-top: 8px;" {{ block.shopify_attributes }}>
                    {{ product.description }}
                  </div>

                {%- when 'inventory_level' -%}
                  {%- liquid
                    assign current_variant = product.selected_or_first_available_variant
                    assign inventory_quantity = current_variant.inventory_quantity
                  -%}
                
                {%- when 'variant_picker' -%}
                  {% if product.variants.size == 1 and product.available != true %}
                    <div class="low_quantity" color="{{ color | lstrip }}" size="{{ size | rstrip }}">{{ "products.product.out_of_stock" | t }}!</div>
                  {% endif %}
                  {% if product.variants.size == 1 %}
                  {% for variant in product.variants %}
                  {% if variant.inventory_quantity < 4 and variant.inventory_quantity > 0 %}
                    <div class="low_quantity" color="{{ color | lstrip }}" size="{{ size | rstrip }}">{{ "products.product.only" | t }} {{ variant.inventory_quantity }} {{ "products.product.left_in_stock" | t }}</div>
                  {% endif %}
                  {% endfor %}
                  {% endif %}
                  {%- unless product.has_only_default_variant -%}
                    {% assign is_disabled = block.settings.variant_is_disabled %}
                    <variant-selects
                      id="variant-selects-{{ section.id }}"
                      class="no-js-hidden"
                      data-section="{{ section.id }}"
                      data-url="{{ product.url }}"
                      data-is-disabled="{{ is_disabled }}">
                      <div style="flex-direction: column-reverse; display: flex;" class="variations" {{ block.shopify_attributes }}>
                        {%- for option in product.options_with_values -%}
                          {%- liquid
                            assign option_name = option.name | downcase | escape
                            assign option_type = block.settings.picker_type
                            assign picker_type = option_type

                            comment
                              if block.settings.color_picker
                                if option_name contains 'color' or option_name contains 'colour'
                                  assign option_type = 'color'
                                endif
                              endif
                            endcomment

                            unless block.settings.color_picker
                              assign color_picker = false
                            endunless
                          -%}
                          {%- liquid
                            assign option_slug = option.name | downcase
                            assign sizing_link = ''
                          -%}
                          {% assign sizeTranslation = 'products.product.size' | t %}
                          {%- if option_slug == sizeTranslation -%}
                            {% assign productTags = product.tags | join: ',' | downcase | split: ',' %}
                            {% if productTags contains 'herren' %}
                              {% assign sizingGuidePage = pages['grossentabelle-herren'] %}
                            {% elsif productTags contains 'damen' %}
                              {% assign sizingGuidePage = pages['grossentabelle-damen'] %}
                            {% endif %}
                            {%- if block.settings.sizing_guide_text != '' -%}
                              {%- capture sizing_link -%}
															<modal-opener class="product-popup-modal__opener no-js-hidden" data-modal="#PopupModal-{{ block.id }}">
												        <button id="ProductPopup-{{ block.id }}" class="product-popup-modal__button" type="button" aria-haspopup="dialog">
																	{% render 'svg-icons-inline', icon: block.settings.sizing_guide_icon %}<span>{{ block.settings.sizing_guide_text }}</span></button>
												      </modal-opener>
														{%- endcapture -%}
                              {%- capture sizing_popup -%}
													  <modal-dialog id="PopupModal-{{ block.id }}" class="product-popup-modal">
													    <div role="dialog" aria-label="{{ block.settings.sizing_guide_text }}" aria-modal="true" class="product-popup-modal__content" tabindex="-1">
																<div class="product-popup-modal__content-header">
																	<h5>{{ sizingGuidePage.title }}</h5>
													        <button id="ModalClose-{{ block.id }}" type="button" class="product-popup-modal__toggle" aria-label="{{ 'accessibility.close' | t }}">{% render 'svg-icons' with 'close' %}</button>
																</div>
																<scroll-shadow>
													        <div class="product-popup-modal__content-info">
                                <div style="display: flex; justify-content: row;">
                                  <p class="outer-paragraph"><p class="inner-paragraph" style="font-weight: 500;     margin-right: 10px;">{{ 'products.product.model_details' | t }}: </p>{{ 'products.product.model_details_size.' | append: product.metafields.custom.hinweis_zum_model | t }}</p>
                                </div>
                                <div style="display: flex; justify-content: row;">
                                  <p class="outer-paragraph">
                                    <p class="inner-paragraph" style="font-weight: 500;     margin-right: 10px;">FIT DETAILS:</p> 
                                      {{ product.metafields.custom.fitdetails }}
                                    </p>
                                </div>
													         <strong style="text-transform: uppercase;">{{ sizingGuidePage.content }}</strong>
													        </div>
																</scroll-shadow>
													    </div>
													  </modal-dialog>
														{%- endcapture -%}
                            {%- endif -%}
                          {%- endif -%}
                          {% render 'product-option-ghostshots',
                            option_type: option_type,
                            product: product,
                            option: option,
                            media: first_image,
                            forloop: forloop,
                            product_form_id: product_form_id,
                            sizing_link: sizing_link
                          %}
                        {%- endfor -%}
                      </div>
                      <script type="application/json">
                        {{ product.variants | json }}
                      </script>
                    </variant-selects>
                  {%- endunless -%}
                  <noscript class="product-form__noscript-wrapper-{{ section.id }}">
                    <div class="product-form__input{% if product.has_only_default_variant %} hidden{% endif %}">
                      <label for="Variants-{{ section.id }}">{{ 'products.product.product_variants' | t }}</label>
                      <div class="select">
                        <select
                          name="id"
                          id="Variants-{{ section.id }}"
                          class="select__select"
                          form="{{ product_form_id }}"
                        >
                          {%- for variant in product.variants -%}
                            <option
                              {% if variant == product.selected_or_first_available_variant %}
                                selected="selected"
                              {% endif %}
                              {% if variant.available == false %}
                                disabled
                              {% endif %}
                              value="{{ variant.id }}"
                            >
                              {{ variant.title }}
                              {%- if variant.available == false %} - {{ 'products.product.sold_out' | t }}{% endif %}
                              - {{ variant.price | money | strip_html }}
                            </option>
                          {%- endfor -%}
                        </select>
                      </div>
                    </div>
                  </noscript>
                {%- when 'side_panel' -%}
                  <side-panel-links class="side-panel-links">
                    {%- if block.settings.side_panel_1_label != '' -%}
                      <button class="side-panel-links--link no-js-hidden" data-id="1">
                        {% render 'svg-icons-inline', icon: block.settings.side_panel_1_icon -%}
                        <span class="text-button">{{ block.settings.side_panel_1_label }}</span>
                      </button>
                      <a
                        href="{{ block.settings.side_panel_1_page.url }}"
                        class="side-panel-links--link no-js"
                        target="_blank"
                      >
                        {%- render 'svg-icons-inline', icon: block.settings.side_panel_1_icon -%}
                        <span class="text-button">{{ block.settings.block.settings.side_panel_1_label }}</span></a
                      >
                    {%- endif -%}
                    {%- if block.settings.side_panel_2_label != '' -%}
                      <button class="side-panel-links--link no-js-hidden" data-id="2">
                        {% render 'svg-icons-inline', icon: block.settings.side_panel_2_icon -%}
                        <span class="text-button">{{ block.settings.side_panel_2_label }}</span>
                      </button>
                      <a
                        href="{{ block.settings.side_panel_2_page.url }}"
                        class="side-panel-links--link no-js"
                        target="_blank"
                      >
                        {%- render 'svg-icons-inline', icon: block.settings.side_panel_2_icon -%}
                        <span class="text-button">{{ block.settings.block.settings.side_panel_2_label }}</span></a
                      >
                    {%- endif -%}
                    {%- if block.settings.side_panel_3_label != '' -%}
                      <button class="side-panel-links--link no-js-hidden" data-id="3">
                        {% render 'svg-icons-inline', icon: block.settings.side_panel_3_icon -%}
                        <span class="text-button">{{ block.settings.side_panel_3_label }}</span>
                      </button>
                      <a
                        href="{{ block.settings.side_panel_3_page.url }}"
                        class="side-panel-links--link no-js"
                        target="_blank"
                      >
                        {%- render 'svg-icons-inline', icon: block.settings.side_panel_3_icon -%}
                        <span class="text-button">{{ block.settings.block.settings.side_panel_3_label }}</span></a
                      >
                    {%- endif -%}
                  </side-panel-links>
                {%- when 'buy_buttons' -%}
                  {% render 'product-add-to-cart',
                    product: product,
                    form: form,
                    product_form_id: product_form_id,
                    show_dynamic_checkout: block.settings.show_dynamic_checkout,
                    show_quantity_selector: block.settings.show_quantity_selector,
                    block: block,
                    pickup: true
                  %}
                  {% render 'social-share',
                    share_label: false,
                    share_title: product.title,
                    share_permalink: product.url,
                    share_image: product.featured_image 
                  %}
                  <div
                    style="
                      display: flex;
                      margin-bottom: 20px;
                      flex-direction: column;
                      justify-content: center;
                      align-items: center;
                      border: 1px solid #000;
                    "
                  >
                    <a
                      href="
                        {% if request.locale.iso_code == 'en' %}
                          https://morotai.com/en-hr/pages/tracking-delivery-faq
                        {% else %}
                          https://morotai.com/de-hr/pages/tracking-delivery-faq
                        {% endif %}
                      "
                      style="
                        display: flex;
                        padding: 11px;
                        justify-content: space-between;
                        align-items: center;
                        align-self: stretch;
                        border-bottom: 1px solid #000;
                      "
                    >
                      <div
                        style=""
                      >
                        <div
                          style="
                            display: flex;
                            align-items: center;
                            gap: 20px;
                          "
                        >
                          <img
                            src="{{ 'Delivery.png' | file_img_url: '500x500' }}"
                            height="45px"
                            width="45px"
                            style="padding-left:0px"
                          >
                          <div
                            style="
                              display: flex;
                              padding-top: 0;
                              flex-direction: column;
                              align-items: flex-start;
                              gap: 0;
                            "
                          >
                            <div
                              style="
                                color: var(--Black, #000);
                                font-family: Rajdhani;
                                font-size: 24px;
                                font-style: normal;
                                font-weight: 500;
                                line-height: normal;
                                text-transform: uppercase;
                              "
                            >
                              {{ 'products.product.badges.delivery' | t }}
                            </div>
                            <div>{{ 'products.product.badges.working_days' | t }}</div>
                          </div>
                        </div>
                      </div>
                    </a>
                    <div
                      style="
                        display: flex;
                        padding: 16px;
                        justify-content: space-between;
                        align-items: center;
                        align-self: stretch;
                      "
                    >
                      <div
                        style="
                          display: flex;
                          align-items: center;
                          gap: 20px;
                        "
                      >
                        <img
                          src="{{ 'Secure_Payment.png' | file_img_url: '500x500' }}"
                          height="45px"
                          width="45px"
                          style="padding-left:0px"
                        >
                        <div
                          style="
                            display: flex;
                            padding-top: 0px;
                            flex-direction: column;
                            align-items: center;
                            gap: 4px;
                          "
                        >
                          <div
                            style="
                              color: var(--Black, #000);
                              font-family: Rajdhani;
                              font-size: 24px;
                              font-style: normal;
                              font-weight: 500;
                              line-height: normal;
                              text-transform: uppercase;
                              white-space: nowrap;
                            "
                          >
                            {{ 'products.product.badges.pay_safe' | t }}
                          </div>
                        </div>
                        <div
                          style="
                            display: flex;
                            flex-direction: column;
                            align-items: center;
                            gap: 9px;
                          "
                        >
                          <div class="localization-payment-icons">
                            {% render 'payment-options' %}
                          </div>
                        </div>
                      </div>
                    </div>
                    <a
                      href="
                        {% if request.locale.iso_code == 'en' %}
                          https://morotai.com/en-hr/pages/payment-accept-faq
                        {% else %}
                          https://morotai.com/de-hr/pages/payment-accept-faq
                        {% endif %}
                      "
                      style="
                        display: flex;
                        padding: 16px;
                        justify-content: space-between;
                        align-items: center;
                        align-self: stretch;
                        border-top: 1px solid #000;
                      "
                    >
                      <div
                        style=""
                      >
                        <div
                          style="
                            display: flex;
                            align-items: flex-start;
                            gap: 20px;
                          "
                        >
                          <img
                            src="{{ '100_Days_Return.png' | file_img_url: '500x500' }}"
                            height="45px"
                            width="45px"
                            style="padding-left:0px"
                          >
                          <div
                            style="
                              display: flex;
                              padding-top: 7px;
                              flex-direction: column;
                              align-items: flex-start;
                              gap: 4px;
                            "
                          >
                            <div
                              style="
                                color: var(--Black, #000);
                                font-family: Rajdhani;
                                font-size: 24px;
                                font-style: normal;
                                font-weight: 500;
                                line-height: normal;
                                text-transform: uppercase;
                              "
                            >
                              {{ 'products.product.badges.return_policy' | t }}
                            </div>
                          </div>
                          <div
                            style="
                              display: flex;
                              flex-direction: column;
                              align-items: flex-start;
                              gap: 9px;
                            "
                          ></div>
                        </div>
                      </div>
                    </a>
                    <div style="display: flex;
                        padding: 16px;
                        justify-content: space-between;
                        align-items: center;
                        align-self: stretch;
                        border-top: 1px solid #000;
                        position: relative;">
                      <div style=" display: flex;
                          align-items: center;
                          gap: 20px;">
                        <img src="{{ 'Customer_Satisfaction.png' | file_img_url: '500x500' }}"
                          height="45px"
                          width="45px"
                          style="padding-left:0px">
                        <div style="
                            display: flex;
                            padding-top: 7px;
                            flex-direction: column;
                            align-items: center;
                            gap: 4px;">
                          <div class="warranty_badge"
                            style="color: var(--Black, #000);
                              font-family: Rajdhani;
                              font-size: 24px;
                              font-style: normal;
                              font-weight: 500;
                              line-height: normal;
                              text-transform: uppercase;">
                            {% comment %}
                            {{ 'products.product.badges.warranty' | t }}
                            {% endcomment %}
                            <script src="https://widget.reviews.io/badge-ribbon/dist.js"></script>
                            <div id="badge-ribbon"></div>
                            <script>
                                reviewsBadgeRibbon("badge-ribbon", {
                                    store: "morotai",
                                    size: "small",
                                    
                                });
                            </script>
                          </div>
                        </div>
                        <div style="display: flex;
                            flex-direction: column;
                            align-items: center;
                            gap: 9px;"></div>
                      </div>
                    </div>
                  </div>
                  {% if product.metafields.custom.shop_the_look_2.value or product.metafields.custom.shop_the_look_3.value %}            
                  <div class="shop_the_look-scroll_button" id="shop_the_look-scroll"> 
                    <div class="shop_the_look-scroll_button_left_side">
                      <div class="shop_the_look-scroll_button_title">
                        {{ 'products.product.shop_the_look' | t }}
                      </div>
                      <div class="shop_the_look-scroll_button_text">
                        {{ 'products.product.scroll' | t }}
                      </div>
                    </div>
                    {% if product.metafields.custom.shop_the_look_scroll_button_image.value %}
                      {% assign scrollImage = product.metafields.custom.shop_the_look_scroll_button_image.value %}
                      <div class="shop_the_look-scroll_button_image" style="width: 100px;">
                        {%- render 'responsive-image', image: scrollImage, sizes: '128x0' -%}
                      </div>
                    {% endif %}
                  </div>
                  {% endif %}
                  <div
                        style="
                          display: flex;
                          flex-direction: column;
                          align-items: space-between;
                          margin-top: 30px;
                        "
                      >
                        <div style="display: flex; justify-content: space-between;">
                          <div>
                            <span
                              style=""
                            >
                              {{- 'products.product.badges.temperature_range' | t -}}
                            </span>
                          </div>
                          <div
                            style="
                              display: flex;
                              align-items: flex-start;
                              gap: 8px;
                            "
                          >
                            <span style="cursor: pointer" onclick="switchToC()">°C</span>
                            <span style="cursor: pointer" onclick="switchToF()">°F</span>
                          </div>
                        </div>

                        <div
                          style="
                                                  display: flex;
                            margin-bottom: 16px;
                            height: 16px;
                            {% if product.metafields.custom.temperature == '15-30°C' %}
                                background: linear-gradient(90deg, #F4F4F4 61%, #000 80.5%, #F4F4F4 100%);
                            {% elsif product.metafields.custom.temperature  == '5-20°C' %}
                                background: linear-gradient(90deg, #F4F4F4 37.5%, #000 54.75%, #F4F4F4 72%);
                            {% elsif product.metafields.custom.temperature  == '-5-30°C' %}
                                background: linear-gradient(90deg, #F4F4F4 15%, #000 57.5%, #F4F4F4 100%);
                            {% elsif product.metafields.custom.temperature  == '-5-25°C' %}
                                background: linear-gradient(90deg, #F4F4F4 37.5%, #000 60.615%, #F4F4F4 83.73%);
                            {% elsif product.metafields.custom.temperature  == '10-30°C' %}
                                background: linear-gradient(90deg, #F4F4F4 50.0%, #000 73.865%, #F4F4F4 97.73%);
                            {% elsif product.metafields.custom.temperature  == '5-25°C' %}
                                background: linear-gradient(90deg, #F4F4F4 37.5%, #000 61.25%, #F4F4F4 85%);
                            {% elsif product.metafields.custom.temperature  == '0-25°C' %}
                                background: linear-gradient(90deg, #F4F4F4 25.5%, #000 54.615%, #F4F4F4 83.73%);
                            {% elsif product.metafields.custom.temperature  == '-5°-20C°' %}
                                background: linear-gradient(90deg, #F4F4F4 15%, #000 50%, #F4F4F4 85%);
                            {% else %}
                            {% endif %}
                          "
                        ></div>
                        <div id="celsius" style="display: flex; flex-direction: row; justify-content: space-between">
                          <div>-10°C</div>
                          <div>0°C</div>
                          <div>10°C</div>
                          <div>20°C</div>
                          <div>30°C</div>
                        </div>
                          <div id="feren" style="display: none; flex-direction: row; justify-content: space-between">
                          <div>-14°F</div>
                          <div>32°F</div>
                          <div>50°F</div>
                          <div>68°F</div>
                          <div>86°F</div>
                        </div>
                      </div>
                      <div
                        style="
                          display: flex;
                          flex-direction: column;
                          align-items: flex-start;
                          margin-top: 15px;
                          margin-bottom: 25px;
                          gap: 8px;
                        "
                      >
                        {{ 'products.product.badges.weather_conditions' | t }}

                        <div style="height: 39px; width: 100%;">
                          <div
                            style="
                              display: flex;
                              align-items: flex-start;
                              width: 100%;
                              gap: 4px;
                            "
                          >
                            <div
                              class="div1"
                              style="height: 12px; flex: 1 0 0; background-color: {% if product.metafields.custom.weather_conditions_1 == 'HOT' or product.metafields.custom.weather_conditions_2 == 'HOT' or product.metafields.custom.weather_conditions_3 == 'HOT' %}black{% else %}#F4F4F4{% endif %};"
                            ></div>

                            <div
                              class="div2"
                              style="height: 12px; flex: 1 0 0; background-color: {% if product.metafields.custom.weather_conditions_1 == 'RAIN' or product.metafields.custom.weather_conditions_2 == 'RAIN' or product.metafields.custom.weather_conditions_3 == 'RAIN' %}black{% else %}#F4F4F4{% endif %};"
                            ></div>

                            <div
                              class="div3"
                              style="height: 12px; flex: 1 0 0; background-color: {% if product.metafields.custom.weather_conditions_1 == 'COLD' or product.metafields.custom.weather_conditions_2 == 'COLD' or product.metafields.custom.weather_conditions_3 == 'COLD' %}black{% else %}#F4F4F4{% endif %};"
                            ></div>

                            <div
                              class="div4"
                              style="height: 12px; flex: 1 0 0; background-color: {% if product.metafields.custom.weather_conditions_1 == 'LOW LIGHT' or product.metafields.custom.weather_conditions_2 == 'LOW LIGHT' or product.metafields.custom.weather_conditions_3 == 'LOW LIGHT' %}black{% else %}#F4F4F4{% endif %};"
                            ></div>
                          </div>
                          <div style="display: flex; justify-content: space-around;">
                            <span>{{ 'products.product.weather_conditions.hot' | t }}</span>
                            <span>{{ 'products.product.weather_conditions.rain' | t }}</span>
                            <span>{{ 'products.product.weather_conditions.cold' | t }}</span>
                            <span>{{ 'products.product.weather_conditions.low_light' | t }}</span>
                          </div>
                        </div>
                      </div>

                        

                {%- when 'collapsible_tab' -%}
                  <collapsible-row class="product__accordion accordion" {{ block.shopify_attributes }}>
                    <details
                      id="Details-{{ block.id }}-{{ section.id }}"
                      {% if block.settings.open %}
                        open
                      {% endif %}
                    >
                      <summary>
                        {{ block.settings.heading | default: block.settings.page.title }}
                        <span></span>
                      </summary>
                      <div
                        class="collapsible__content accordion__content rte"
                        id="ProductAccordion-{{ block.id }}-{{ section.id }}"
                      >
                        {{ block.settings.content }}
                        {{ block.settings.page.content }}
                      </div>
                    </details>
                  </collapsible-row>
                {%- when 'complementary' -%}
                  <product-recommendations
                    class="complementary-products no-js-hidden"
                    data-url="{{ routes.product_recommendations_url }}?section_id={{ section.id }}&product_id={{ product.id }}&limit={{ block.settings.product_list_limit }}&intent=complementary"
                  >
                    {%- if recommendations.performed and recommendations.products_count > 0 -%}
                      <div class="complementary-products--inner">
                        {%- if block.settings.block_heading != blank -%}
                          <div class="complementary-products--heading">{{ block.settings.block_heading }}</div>
                        {%- endif -%}
                        {%- for product in recommendations.products
                          limit: block.settings.product_list_limit
                          offset: continue
                        -%}
                          <div class="product-cart-item">
                            <div class="product-cart-item-image">
                              <a
                                href="{{ product.url }}"
                                title="{{ product.title | escape }}"
                                class="cart-product-link"
                              >
                                {% if product.featured_media %}
                                  {%- render 'responsive-image', image: product.featured_media, sizes: '128x0' -%}
                                {% else %}
                                  <div class="thb-placeholder" style="width: 64px;">
                                    {{ 'product-1' | placeholder_svg_tag }}
                                  </div>
                                {% endif %}
                              </a>
                            </div>
                            <div class="product-cart-item-info">
                              <a
                                href="{{ product.url }}"
                                title="{{ product.title | escape }}"
                                class="cart-product-link"
                              >
                                {{- product.title -}}
                              </a>
                              {% render 'product-price', product: product %}
                            </div>
                          </div>
                        {%- endfor -%}
                      </div>
                      <script src="{{ 'product-recommendations.js' | asset_url }}" defer="defer"></script>
                    {%- endif -%}
                  </product-recommendations>
              {%- endcase -%}
            {% endfor %}
            {% if product.metafields.custom.shop_the_look_2.value or product.metafields.custom.shop_the_look_3.value %}
              {% include 'shop-the-look-block' product: product %}
            {% endif %}
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
<div class="side-panel side-availability" id="Pickup-Availability"></div>
{%- if enable_sticky_add_to_cart -%}
  {% render 'product-add-to-cart-sticky',
    product: product,
    media: first_image,
    color_picker: color_picker,
    picker_type: picker_type,
    form: form,
    is_disabled: is_disabled
  %}
{%- endif -%} 

{{ sizing_popup }}

{%- assign side_panels = section.blocks | where: 'type', 'side_panel' -%}
{%- if side_panels -%}
  <div class="side-panel product-information-drawer" id="Product-Information-Drawer" tabindex="-1">
    <div class="side-panel-inner">
      <div class="side-panel-header">
        <div>
          <h4 class="body-font">{{ 'products.product.product_information' | t }}</h4>
          <side-panel-close class="side-panel-close">{%- render 'svg-icons' with 'close' -%}</side-panel-close>
        </div>
      </div>
      <div class="side-panel-content side-panel-content--has-tabs">
        {%- assign block = side_panels[0] -%}
        <side-panel-content-tabs class="side-panel-content--tabs">
          {%- if block.settings.side_panel_1_label != '' -%}
            <button class="tab-active">{{ block.settings.side_panel_1_label }}</button>
          {%- endif -%}
          {%- if block.settings.side_panel_2_label != '' -%}
            <button>{{ block.settings.side_panel_2_label }}</button>
          {%- endif -%}
          {%- if block.settings.side_panel_3_label != '' -%}
            <button>{{ block.settings.side_panel_3_label }}</button>
          {%- endif -%}
        </side-panel-content-tabs>
        <div class="side-panel-content--inner">
          {%- if block.settings.side_panel_1_label != '' -%}
            <div class="side-panel-content--tab-panel rte tab-active">
              {{ block.settings.side_panel_1_page.content }}
            </div>
          {%- endif -%}
          {%- if block.settings.side_panel_2_label != '' -%}
            <div class="side-panel-content--tab-panel rte">
              {{ block.settings.side_panel_2_page.content }}
            </div>
          {%- endif -%}
          {%- if block.settings.side_panel_3_label != '' -%}
            <div class="side-panel-content--tab-panel rte">
              {{ block.settings.side_panel_3_page.content }}
            </div>
          {%- endif -%}
        </div>
      </div>
    </div>
  </div>
{%- endif -%}
{%- if section.settings.lightbox != blank -%}
  {% render 'photoswipe' %}
  <link rel="stylesheet" href="{{ 'photoswipe.css' | asset_url }}" media="print" onload="this.media='all'">
{%- endif -%}
<script src="{{ 'product.js' | asset_url }}" defer="defer"></script>

{%- if first_3d_model -%}
  <script type="application/json" id="ProductJSON-{{ product.id }}">
    {{ product.media | where: 'media_type', 'model' | json }}
  </script>

  <script src="{{ 'product-model.js' | asset_url }}" defer></script>
{%- endif -%}

{%- liquid
  if product.selected_or_first_available_variant.featured_media
    assign seo_media = product.selected_or_first_available_variant.featured_media
  else
    assign seo_media = product.featured_media
  endif
-%}

<style>
  .zoom-image {
    position: absolute;
    display: none;
    width: 200%;
    height: 200%;
    top: 0;
    left: 0;
    background-size: 200% 200%;
    background-repeat: no-repeat;
    pointer-events: none;
  }

   #zoom {
    position: absolute;
    display: none;
    width: 150%;
    height: 150%;
    top: 0;
    left: 0;
    background-size: 150% 150%;
    background-repeat: no-repeat;
    pointer-events: none;
    background-color: white;
  }

  #container {
    cursor: -moz-zoom-in; 
    cursor: -webkit-zoom-in; 
    cursor: zoom-in;
  }
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const container = document.getElementById('container');
  const image = document.getElementById('image-zoom');
  const zoom = document.getElementById('zoom');

  container.addEventListener('mousemove', function(event) {
    const { left, top, width, height } = container.getBoundingClientRect();
    const x = (event.clientX - left) / width;
    const y = (event.clientY - top) / height;
    
    zoom.style.backgroundPosition = `${x * 165}% ${y * 165}%`;
    zoom.style.display = 'block';
  });

  container.addEventListener('mouseleave', function() {
    zoom.style.display = 'none';
  });
});
</script>

<script type="application/ld+json">
  {
    "@context": "http://schema.org/",
    "@type": "Product",
    "name": {{ product.title | json }},
    "url": {{ request.origin | append: product.url | json }},
    {% if seo_media -%}
      "image": [
        {{ seo_media | image_url: width: seo_media.preview_image.width | prepend: "https:" | json }}
      ],
    {%- endif %}
    "description": {{ product.description | strip_html | json }},
    {% if product.selected_or_first_available_variant.sku != blank -%}
      "sku": {{ product.selected_or_first_available_variant.sku | json }},
    {%- endif %}
    "brand": {
      "@type": "Brand",
      "name": {{ product.vendor | json }}
    },
    "offers": [
      {%- for variant in product.variants -%}
        {
          "@type" : "Offer",
          {%- if variant.sku != blank -%}
            "sku": {{ variant.sku | json }},
          {%- endif -%}
          {%- if variant.barcode.size == 12 -%}
            "gtin12": {{ variant.barcode }},
          {%- endif -%}
          {%- if variant.barcode.size == 13 -%}
            "gtin13": {{ variant.barcode }},
          {%- endif -%}
          {%- if variant.barcode.size == 14 -%}
            "gtin14": {{ variant.barcode }},
          {%- endif -%}
          "availability" : "http://schema.org/{% if variant.available %}InStock{% else %}OutOfStock{% endif %}",
          "price" : {{ variant.price | divided_by: 100.00 | json }},
          "priceCurrency" : {{ cart.currency.iso_code | json }},
          "url" : {{ request.origin | append: variant.url | json }}
        }{% unless forloop.last %},{% endunless %}
      {%- endfor -%}
    ]
  }
</script>

<script>
document.addEventListener('DOMContentLoaded', function() {
  let initialCheckedInput = document.querySelector('input[name="Farbe"]:checked');
  document.querySelector('input[name="Farbe"]').click();
  initialCheckedInput.click();
  function updateMainProductImage() {
    let checkedInput = document.querySelector('input[name="Farbe"]:checked');
    if (checkedInput) {
      let label = checkedInput.nextElementSibling.querySelector('label[option="Farbe"]');
      let image = label.querySelector('img');
      let imageUrl = image ? image.getAttribute('src') : '';
      let mainProductImage = document.querySelector('.main-product-img');
      if (mainProductImage) {
        mainProductImage.setAttribute('srcset', imageUrl);
      }
    }
  }

  updateMainProductImage();

  document.addEventListener('change', function(event) {
    if (event.target.tagName === 'INPUT' && event.target.name === 'Farbe') {
      updateMainProductImage();
    }
  });
});
</script>

<script>
// Script for changing main image when hovering over side images
document.addEventListener('DOMContentLoaded', function () {
    const mediaImages = document.querySelectorAll('.product-single__media-image');
    const mainProductImage = document.querySelector('.main-product-img');
    const zoomContainer = document.querySelector('#zoom');

    mediaImages.forEach((mediaImage) => {
        mediaImage.addEventListener('mouseover', function () {
          mediaImage.classList.add('hovered');
            const srcsetValue = mediaImage.querySelector('img').getAttribute('srcset');
            const zoomImage = mediaImage.querySelector('img').getAttribute('data-zoom');
            if (srcsetValue) {
                mainProductImage.setAttribute('srcset', srcsetValue);
                zoomContainer.style.backgroundImage = `url('${zoomImage}')`;
            }
        });
        mediaImage.addEventListener('mouseleave', function () {
          mediaImage.classList.remove('hovered');
        });
    });
});
</script>

<script>
  // Reordering first image (ghostshot) of same color to be last image of the same color
document.addEventListener('DOMContentLoaded', function () {
  const sliders = document.querySelectorAll('.product_image_slider');

  const altOrders = {};

  sliders.forEach(slider => {
    const images = slider.querySelectorAll('img');

    images.forEach((image, index) => {
      const altValue = image.getAttribute('alt');

      if (!altOrders.hasOwnProperty(altValue)) {
        altOrders[altValue] = [];
      }

      altOrders[altValue].push(image);
    });

    Object.values(altOrders).forEach((imageArray, index) => {
      imageArray.forEach((image, imageIndex) => {
        const order = imageIndex === 0 ? (index + 1) * 2 : (index + 1) * 2 - 1;
        image.parentElement.parentElement.style.order = order;
      });
    });
  });
});

</script>

<script>
// Mobile image carousels
document.addEventListener('DOMContentLoaded', function () {
// Get reference to main and thumbnail carousels
var mainCarousel = document.querySelector('.main_mobile-carousel');
var thumbnailCarousel = document.querySelector('.thumbnail-carousel');

// Initialize both Flickity instances
var flktyMain = new Flickity(mainCarousel, {
  prevNextButtons: false,
  wrapAround: true,
  pageDots: true
});

var flktyThumbnail = new Flickity(thumbnailCarousel, {
  prevNextButtons: false,
  pageDots: false,
  {% if product.media.size > 5 %}
  wrapAround: true,
  {% endif %}
  cellAlign: 'left'
});

// Synchronize both carousels
flktyMain.on('change', function(index) {
  flktyThumbnail.select(index);
});

flktyThumbnail.on('change', function(index) {
  flktyMain.select(index);
});

// Thumbnail images act as buttons
var thumbnailImages = document.querySelectorAll('.carousel_thumbnail');

thumbnailImages.forEach(function(thumbnail, index) {
  thumbnail.addEventListener('click', function() {
    flktyMain.select(index);
    flktyThumbnail.select(index);
  });
});

// Get reference to previous and next buttons
var prevButton = document.querySelector('.button--previous');
var nextButton = document.querySelector('.button--next');

// Previous button click event
prevButton.addEventListener('click', function() {
  flktyMain.previous();
});

// Next button click event
nextButton.addEventListener('click', function() {
  flktyMain.next();
});

flktyNav.on('select', function() {
  var selectedCell = flktyNav.selectedCell.element;
  var offset = selectedCell.offsetLeft - (flktyNav.element.clientWidth - selectedCell.clientWidth) / 2;
  flktyNav.settle(offset);
});

});
</script>


{% schema %}
{
  "name": "Product information",
  "tag": "section",
  "class": "product-section",
	"settings": [
		{
			"type": "checkbox",
			"id": "full_width",
			"default": false,
			"label": "Make section full width"
		},
		{
			"type": "checkbox",
			"id": "enable_sticky_info",
			"default": true,
			"label": "Enable sticky content on desktop"
		},
		{
			"type": "checkbox",
			"id": "enable_sticky_add_to_cart",
			"default": true,
			"label": "Show sticky add to cart"
		},
		{
			"type": "checkbox",
			"id": "show_taxes_included",
			"default": true,
			"label": "Show tax and shipping information",
			"info": "Tax and shipping information will be displayed if [taxes are included in the price](https://help.shopify.com/en/manual/taxes/location#include-taxes-in-product-prices) or [shipping policy](https://help.shopify.com/en/manual/checkout-settings/refund-privacy-tos#add-or-generate-store-policies) is added"
		},
		{
			"type": "header",
			"content": "Media"
		},
		{
			"type": "paragraph",
			"content": "Learn more about [media types](https://help.shopify.com/en/manual/products/product-media)"
		},
		{
			"type": "select",
			"id": "media_layout",
			"options": [
				{
					"value": "grid",
					"label": "Grid"
				},
				{
					"value": "list",
					"label": "List"
				},
				{
					"value": "collage",
					"label": "Collage"
				}
			],
			"default": "grid",
			"label": "Layout"
		},
		{
			"type": "select",
			"id": "media_aspect_ratio",
			"options": [
				{
					"value": "adapt",
					"label": "Adapt to image"
				},
				{
					"value": "square",
					"label": "Square"
				},
				{
					"value": "portrait",
					"label": "Portrait"
				},
				{
					"value": "landscape",
					"label": "Landscape"
				}
			],
			"default": "adapt",
			"label": "Image ratio"
		},
		{
      "type": "checkbox",
      "id": "display_captions",
      "default": true,
      "label": "Display captions"
    },
		{
      "type": "checkbox",
      "id": "hide_variants",
      "default": false,
      "label": "Hide unselected variants’ media",
			"info": "Media for the unselected variants will be hidden."
    },
		{
			"type": "checkbox",
			"id": "lightbox",
			"default": true,
			"label": "Enable image zoom"
		},
		{
      "type": "checkbox",
      "id": "enable_video_looping",
      "default": false,
      "label": "Enable video looping"
    }
  ],
  "blocks": [
		{
			"type": "@app"
		},
		{
      "type": "text",
      "name": "Text",
      "settings": [
        {
          "type": "text",
          "id": "text",
          "default": "Text block",
          "label": "Text"
        },
        {
          "type": "select",
          "id": "text_style",
          "options": [
            {
              "value": "style_body",
              "label": "Body"
            },
            {
              "value": "subheading",
              "label": "Subheading"
            },
            {
              "value": "style_vendor",
              "label": "Vendor"
            }
          ],
          "default": "style_vendor",
          "label": "Text Style"
        }
      ]
    },
    {
      "type": "title",
      "name": "Title",
      "limit": 1,
			"settings": [
				{
					"type": "checkbox",
					"id": "uppercase",
					"default": true,
					"label": "Make title uppercase"
				},
				{
					"type": "checkbox",
					"id": "show_products_rating",
					"default": true,
					"label": "Show product rating",
					"info": "To display a rating, add a product rating app. [Learn more](https://help.shopify.com/manual/online-store/themes/os20/themes-by-shopify/dawn/sections#featured-collection-show-product-rating)"
				}
			]
    },
		{
      "type": "inventory_level",
      "name": "Inventory level",
      "limit": 1,
      "settings": [
				{
					"type": "select",
					"id": "show_inventory_notice",
					"options": [
						{
							"value": "always",
							"label": "Always"
						},
						{
							"value": "low",
							"label": "Only when inventory low"
						}
					],
					"default": "always",
					"label": "Show inventory notice"
				},
        {
          "type": "select",
          "id": "show_inventory_count",
          "options": [
						{
							"value": "never",
							"label": "Never"
						},
            {
              "value": "always",
              "label": "Always"
            },
            {
              "value": "low",
              "label": "Only when inventory low"
            }
          ],
          "default": "always",
          "label": "Show count in inventory notice"
        },
				{
					"type": "checkbox",
					"id": "inventory_notice_pulse",
					"default": true,
					"label": "Show pulse"
				},
				{
					"type": "checkbox",
					"id": "inventory_notice_bar",
					"default": true,
					"label": "Show progress bar"
				},
				{
				  "type": "number",
				  "id": "inventory_notice_threshold",
				  "label": "Low inventory threshold",
				  "default": 10,
					"info": "Set the product inventory quantity to alert customers when limited quantities are available. Insert a dynamic source to set different thresholds for multiple products."
				},
				{
				  "type": "number",
				  "id": "inventory_notice_base",
				  "label": "Inventory base quantity",
				  "default": 20,
					"info": "Enter the initial quantity of your product inventory for progress bar. Insert a dynamic source to set different base quantities for multiple products"
				}
      ]
    },
		{
      "type": "variant_picker",
      "name": "Variant picker",
      "limit": 1,
      "settings": [
        {
          "type": "select",
          "id": "picker_type",
          "options": [
            {
              "value": "dropdown",
              "label": "Dropdown"
            },
            {
              "value": "button",
              "label": "Block"
            }
          ],
          "default": "button",
          "label": "Type"
        },
				{
					"type": "checkbox",
					"id": "color_picker",
					"default": true,
					"label": "Enable color swatches",
					"info": "[Learn more about color swatches.](https://documentation.fuelthemes.net/kb/how-do-i-set-up-product-variant-swatches/)"
				},
				{
					"type": "checkbox",
					"id": "variant_is_disabled",
					"default": true,
					"label": "Show availability in selectors",
					"info": "When an option is selected, unavailable variants will be crossed-out."
				},
				{
					"type": "header",
					"content": "Sizing guide"
				},
				{
          "type": "text",
          "id": "sizing_guide_text",
          "default": "Sizing guide",
          "label": "Sizing guide label",
					"info": "Leave empty to remove the sizing guide link."
        },
        {
          "type": "select",
          "id": "sizing_guide_icon",
          "options": [
            {
              "value": "none",
              "label": "None"
            },
            {
              "value": "apple",
              "label": "Apple"
            },
            {
              "value": "banana",
              "label": "Banana"
            },
            {
              "value": "bottle",
              "label": "Bottle"
            },
            {
              "value": "box",
              "label": "Box"
            },
            {
              "value": "carrot",
              "label": "Carrot"
            },
            {
              "value": "chat_bubble",
              "label": "Chat bubble"
            },
            {
              "value": "check_mark",
              "label": "Check mark"
            },
            {
              "value": "clipboard",
              "label": "Clipboard"
            },
            {
              "value": "dairy",
              "label": "Dairy"
            },
            {
              "value": "dairy_free",
              "label": "Dairy free"
            },
            {
              "value": "dryer",
              "label": "Dryer"
            },
            {
              "value": "eye",
              "label": "Eye"
            },
            {
              "value": "fire",
              "label": "Fire"
            },
            {
              "value": "gluten_free",
              "label": "Gluten free"
            },
            {
              "value": "heart",
              "label": "Heart"
            },
            {
              "value": "iron",
              "label": "Iron"
            },
            {
              "value": "leaf",
              "label": "Leaf"
            },
            {
              "value": "leather",
              "label": "Leather"
            },
            {
              "value": "lightning_bolt",
              "label": "Lightning bolt"
            },
            {
              "value": "lipstick",
              "label": "Lipstick"
            },
            {
              "value": "lock",
              "label": "Lock"
            },
            {
              "value": "map_pin",
              "label": "Map pin"
            },
            {
              "value": "nut_free",
              "label": "Nut free"
            },
            {
              "value": "pants",
              "label": "Pants"
            },
            {
              "value": "paw_print",
              "label": "Paw print"
            },
            {
              "value": "pepper",
              "label": "Pepper"
            },
            {
              "value": "perfume",
              "label": "Perfume"
            },
            {
              "value": "plane",
              "label": "Plane"
            },
            {
              "value": "plant",
              "label": "Plant"
            },
            {
              "value": "price_tag",
              "label": "Price tag"
            },
            {
              "value": "question_mark",
              "label": "Question mark"
            },
            {
              "value": "recycle",
              "label": "Recycle"
            },
            {
              "value": "return",
              "label": "Return"
            },
            {
              "value": "ruler",
              "label": "Ruler"
            },
            {
              "value": "serving_dish",
              "label": "Serving dish"
            },
            {
              "value": "shirt",
              "label": "Shirt"
            },
            {
              "value": "shoe",
              "label": "Shoe"
            },
            {
              "value": "silhouette",
              "label": "Silhouette"
            },
            {
              "value": "snowflake",
              "label": "Snowflake"
            },
            {
              "value": "star",
              "label": "Star"
            },
            {
              "value": "stopwatch",
              "label": "Stopwatch"
            },
            {
              "value": "truck",
              "label": "Truck"
            },
            {
              "value": "washing",
              "label": "Washing"
            }
          ],
          "default": "ruler",
          "label": "Sizing guide icon"
        },
        {
          "type": "page",
	        "id": "sizing_guide_page",
          "label": "Sizing guide page"
        }
      ]
    },
		{
      "type": "buy_buttons",
      "name": "Product form",
      "limit": 1,
			"settings": [
				{
					"type": "checkbox",
					"id": "show_quantity_selector",
					"default": true,
					"label": "Show quantity selector"
				},
        {
          "type": "checkbox",
          "id": "show_dynamic_checkout",
          "default": true,
          "label": "Show dynamic checkout buttons",
          "info": "Using the payment methods available on your store, customers see their preferred option, like PayPal or Apple Pay. [Learn more](https://help.shopify.com/manual/using-themes/change-the-layout/dynamic-checkout)"
        }
      ]
    },
    {
      "type": "description",
      "name": "Description",
      "limit": 1
    },
		{
      "type": "custom_liquid",
      "name": "Custom liquid",
      "settings": [
        {
          "type": "liquid",
          "id": "custom_liquid",
          "label": "Custom liquid",
          "info": "Add app snippets or other Liquid code to create advanced customizations."
        }
      ]
    },
		{
      "type": "side_panel",
      "name": "Information side panel",
      "limit": 1,
      "settings": [
				{
					"type": "header",
					"content": "Panel 1"
				},
        {
          "type": "text",
          "id": "side_panel_1_label",
          "default": "Materials",
          "label": "Label"
        },
        {
          "type": "select",
          "id": "side_panel_1_icon",
          "options": [
            {
              "value": "none",
              "label": "None"
            },
            {
              "value": "apple",
              "label": "Apple"
            },
            {
              "value": "banana",
              "label": "Banana"
            },
            {
              "value": "bottle",
              "label": "Bottle"
            },
            {
              "value": "box",
              "label": "Box"
            },
            {
              "value": "carrot",
              "label": "Carrot"
            },
            {
              "value": "chat_bubble",
              "label": "Chat bubble"
            },
            {
              "value": "check_mark",
              "label": "Check mark"
            },
            {
              "value": "clipboard",
              "label": "Clipboard"
            },
            {
              "value": "dairy",
              "label": "Dairy"
            },
            {
              "value": "dairy_free",
              "label": "Dairy free"
            },
            {
              "value": "dryer",
              "label": "Dryer"
            },
            {
              "value": "eye",
              "label": "Eye"
            },
            {
              "value": "fire",
              "label": "Fire"
            },
            {
              "value": "gluten_free",
              "label": "Gluten free"
            },
            {
              "value": "heart",
              "label": "Heart"
            },
            {
              "value": "iron",
              "label": "Iron"
            },
            {
              "value": "leaf",
              "label": "Leaf"
            },
            {
              "value": "leather",
              "label": "Leather"
            },
            {
              "value": "lightning_bolt",
              "label": "Lightning bolt"
            },
            {
              "value": "lipstick",
              "label": "Lipstick"
            },
            {
              "value": "lock",
              "label": "Lock"
            },
            {
              "value": "map_pin",
              "label": "Map pin"
            },
            {
              "value": "nut_free",
              "label": "Nut free"
            },
            {
              "value": "pants",
              "label": "Pants"
            },
            {
              "value": "paw_print",
              "label": "Paw print"
            },
            {
              "value": "pepper",
              "label": "Pepper"
            },
            {
              "value": "perfume",
              "label": "Perfume"
            },
            {
              "value": "plane",
              "label": "Plane"
            },
            {
              "value": "plant",
              "label": "Plant"
            },
            {
              "value": "price_tag",
              "label": "Price tag"
            },
            {
              "value": "question_mark",
              "label": "Question mark"
            },
            {
              "value": "recycle",
              "label": "Recycle"
            },
            {
              "value": "return",
              "label": "Return"
            },
            {
              "value": "ruler",
              "label": "Ruler"
            },
            {
              "value": "serving_dish",
              "label": "Serving dish"
            },
            {
              "value": "shirt",
              "label": "Shirt"
            },
            {
              "value": "shoe",
              "label": "Shoe"
            },
            {
              "value": "silhouette",
              "label": "Silhouette"
            },
            {
              "value": "snowflake",
              "label": "Snowflake"
            },
            {
              "value": "star",
              "label": "Star"
            },
            {
              "value": "stopwatch",
              "label": "Stopwatch"
            },
            {
              "value": "truck",
              "label": "Truck"
            },
            {
              "value": "washing",
              "label": "Washing"
            }
          ],
          "default": "ruler",
          "label": "Icon"
        },
        {
          "type": "page",
	        "id": "side_panel_1_page",
          "label": "Page"
        },
				{
					"type": "header",
					"content": "Panel 2"
				},
        {
          "type": "text",
          "id": "side_panel_2_label",
          "default": "Shipping &amp; Returns",
          "label": "Label"
        },
        {
          "type": "select",
          "id": "side_panel_2_icon",
          "options": [
            {
              "value": "none",
              "label": "None"
            },
            {
              "value": "apple",
              "label": "Apple"
            },
            {
              "value": "banana",
              "label": "Banana"
            },
            {
              "value": "bottle",
              "label": "Bottle"
            },
            {
              "value": "box",
              "label": "Box"
            },
            {
              "value": "carrot",
              "label": "Carrot"
            },
            {
              "value": "chat_bubble",
              "label": "Chat bubble"
            },
            {
              "value": "check_mark",
              "label": "Check mark"
            },
            {
              "value": "clipboard",
              "label": "Clipboard"
            },
            {
              "value": "dairy",
              "label": "Dairy"
            },
            {
              "value": "dairy_free",
              "label": "Dairy free"
            },
            {
              "value": "dryer",
              "label": "Dryer"
            },
            {
              "value": "eye",
              "label": "Eye"
            },
            {
              "value": "fire",
              "label": "Fire"
            },
            {
              "value": "gluten_free",
              "label": "Gluten free"
            },
            {
              "value": "heart",
              "label": "Heart"
            },
            {
              "value": "iron",
              "label": "Iron"
            },
            {
              "value": "leaf",
              "label": "Leaf"
            },
            {
              "value": "leather",
              "label": "Leather"
            },
            {
              "value": "lightning_bolt",
              "label": "Lightning bolt"
            },
            {
              "value": "lipstick",
              "label": "Lipstick"
            },
            {
              "value": "lock",
              "label": "Lock"
            },
            {
              "value": "map_pin",
              "label": "Map pin"
            },
            {
              "value": "nut_free",
              "label": "Nut free"
            },
            {
              "value": "pants",
              "label": "Pants"
            },
            {
              "value": "paw_print",
              "label": "Paw print"
            },
            {
              "value": "pepper",
              "label": "Pepper"
            },
            {
              "value": "perfume",
              "label": "Perfume"
            },
            {
              "value": "plane",
              "label": "Plane"
            },
            {
              "value": "plant",
              "label": "Plant"
            },
            {
              "value": "price_tag",
              "label": "Price tag"
            },
            {
              "value": "question_mark",
              "label": "Question mark"
            },
            {
              "value": "recycle",
              "label": "Recycle"
            },
            {
              "value": "return",
              "label": "Return"
            },
            {
              "value": "ruler",
              "label": "Ruler"
            },
            {
              "value": "serving_dish",
              "label": "Serving dish"
            },
            {
              "value": "shirt",
              "label": "Shirt"
            },
            {
              "value": "shoe",
              "label": "Shoe"
            },
            {
              "value": "silhouette",
              "label": "Silhouette"
            },
            {
              "value": "snowflake",
              "label": "Snowflake"
            },
            {
              "value": "star",
              "label": "Star"
            },
            {
              "value": "stopwatch",
              "label": "Stopwatch"
            },
            {
              "value": "truck",
              "label": "Truck"
            },
            {
              "value": "washing",
              "label": "Washing"
            }
          ],
          "default": "box",
          "label": "Icon"
        },
        {
          "type": "page",
	        "id": "side_panel_2_page",
          "label": "Page"
        },
				{
					"type": "header",
					"content": "Panel 3"
				},
        {
          "type": "text",
          "id": "side_panel_3_label",
          "default": "Care Guide",
          "label": "Label"
        },
        {
          "type": "select",
          "id": "side_panel_3_icon",
          "options": [
            {
              "value": "none",
              "label": "None"
            },
            {
              "value": "apple",
              "label": "Apple"
            },
            {
              "value": "banana",
              "label": "Banana"
            },
            {
              "value": "bottle",
              "label": "Bottle"
            },
            {
              "value": "box",
              "label": "Box"
            },
            {
              "value": "carrot",
              "label": "Carrot"
            },
            {
              "value": "chat_bubble",
              "label": "Chat bubble"
            },
            {
              "value": "check_mark",
              "label": "Check mark"
            },
            {
              "value": "clipboard",
              "label": "Clipboard"
            },
            {
              "value": "dairy",
              "label": "Dairy"
            },
            {
              "value": "dairy_free",
              "label": "Dairy free"
            },
            {
              "value": "dryer",
              "label": "Dryer"
            },
            {
              "value": "eye",
              "label": "Eye"
            },
            {
              "value": "fire",
              "label": "Fire"
            },
            {
              "value": "gluten_free",
              "label": "Gluten free"
            },
            {
              "value": "heart",
              "label": "Heart"
            },
            {
              "value": "iron",
              "label": "Iron"
            },
            {
              "value": "leaf",
              "label": "Leaf"
            },
            {
              "value": "leather",
              "label": "Leather"
            },
            {
              "value": "lightning_bolt",
              "label": "Lightning bolt"
            },
            {
              "value": "lipstick",
              "label": "Lipstick"
            },
            {
              "value": "lock",
              "label": "Lock"
            },
            {
              "value": "map_pin",
              "label": "Map pin"
            },
            {
              "value": "nut_free",
              "label": "Nut free"
            },
            {
              "value": "pants",
              "label": "Pants"
            },
            {
              "value": "paw_print",
              "label": "Paw print"
            },
            {
              "value": "pepper",
              "label": "Pepper"
            },
            {
              "value": "perfume",
              "label": "Perfume"
            },
            {
              "value": "plane",
              "label": "Plane"
            },
            {
              "value": "plant",
              "label": "Plant"
            },
            {
              "value": "price_tag",
              "label": "Price tag"
            },
            {
              "value": "question_mark",
              "label": "Question mark"
            },
            {
              "value": "recycle",
              "label": "Recycle"
            },
            {
              "value": "return",
              "label": "Return"
            },
            {
              "value": "ruler",
              "label": "Ruler"
            },
            {
              "value": "serving_dish",
              "label": "Serving dish"
            },
            {
              "value": "shirt",
              "label": "Shirt"
            },
            {
              "value": "shoe",
              "label": "Shoe"
            },
            {
              "value": "silhouette",
              "label": "Silhouette"
            },
            {
              "value": "snowflake",
              "label": "Snowflake"
            },
            {
              "value": "star",
              "label": "Star"
            },
            {
              "value": "stopwatch",
              "label": "Stopwatch"
            },
            {
              "value": "truck",
              "label": "Truck"
            },
            {
              "value": "washing",
              "label": "Washing"
            }
          ],
          "default": "washing",
          "label": "Icon"
        },
        {
          "type": "page",
	        "id": "side_panel_3_page",
          "label": "Page"
        }
      ]
    },
		{
      "type": "collapsible_tab",
      "name": "Collapsible row",
      "settings": [
				{
					"type": "text",
					"id": "heading",
					"default": "Collapsible row",
					"info": "Include a heading that explains the content.",
					"label": "Heading"
				},
				{
					"type": "checkbox",
					"id": "open",
					"default": false,
					"label": "Open by default"
				},
        {
          "type": "richtext",
          "id": "content",
          "label": "Row content"
        },
        {
          "type": "page",
          "id": "page",
          "label": "Row content from page"
        }
      ]
    },
		{
      "type": "complementary",
      "name": "Complementary products",
      "limit": 1,
      "settings": [
        {
          "type": "paragraph",
          "content": "To select complementary products, add the Search & Discovery app. [Learn more](https://help.shopify.com/manual/online-store/search-and-discovery/product-recommendations)"
        },
        {
          "type": "text",
          "id": "block_heading",
          "default": "Pairs well with",
          "label": "Heading"
        },
        {
          "type": "range",
          "id": "product_list_limit",
          "min": 1,
          "max": 10,
          "step": 1,
          "default": 10,
          "label": "Maximum products to show"
        }
      ]
    },
		{
      "type": "sku",
      "name": "SKU",
      "settings": [
				{
					"type": "select",
					"id": "sku_style",
					"options": [
						{
							"value": "style_body",
							"label": "Body"
						},
						{
							"value": "subheading",
							"label": "Subheading"
						},
						{
							"value": "style_vendor",
							"label": "Vendor"
						}
					],
					"default": "style_vendor",
					"label": "SKU style"
				}
      ]
    }
  ]
}
{% endschema %}
